# -*- coding: utf-8 -*-
"""
 kayako utilities
"""

import random
import string
import logging
from lxml.etree import fromstring
from lxml.etree import XMLSyntaxError
from settings import KAYAKO_KARMA_IDS
from django.db.models.loading import get_model


def get_kayako_group_id_in_kayako(karma):
    """ get kayako group id for a given karma """
    return KAYAKO_KARMA_IDS[karma]


def update_kayako_user_group(client, group_id):
    """ update kayako use group for a user """
    email = client.email
    kayako = get_model('kayako', 'Kayako').objects.get()
    if not client.clientextradetail.kayako_id:
        try:
            user = kayako.get_user(email=email)
            if user is not None and user['usergroupid'] != str(group_id):
                response = kayako.update_user(
                    user['id'], user['fullname'],
                    {'usergroupid': group_id})
                try:
                    kayako_id = fromstring(response).findall(".//id").pop().text
                    client.clientextradetail.kayako_id = int(kayako_id)
                    client.clientextradetail.save()
                except XMLSyntaxError:
                    pass
                return {'status': True, 'message': 'success'}
            if user is None:
                name = u"{f} {l}".format(
                    f=client.clientdetail.firstname,
                    l=client.clientdetail.lastname)
                pwd = ''.join(random.choice(
                    string.ascii_uppercase + string.digits) for _ in range(8))
                kayako.create_user(name, group_id, pwd, client.email)
        except kayako.NotResponding:
            logging.error('ERROR: kayako not responding')
            return {'status': False, 'message': str(response)}
    else:
        try:
            response = kayako.update_user(client.clientextradetail.kayako_id,
                                          client.fullname(),
                                          {'usergroupid': group_id})

            try:
                fromstring(response)
            except XMLSyntaxError:
                logging.debug('{0}'.format(str(response)))
                response = kayako.create_user(
                    client.fullname(),
                    group_id,
                    ''.join(random.choice(
                        string.ascii_uppercase + string.digits) for x in range(8)),
                    client.email)
        except kayako.NotResponding:
            logging.error('ERROR: kayako not responding')
            return {'status': False, 'message': str(response)}
    try:
        fromstring(response)
        response = {'status': True, 'message': 'success'}
    except XMLSyntaxError:
        logging.debug('ERROR: {0}'.format(str(response)))
        response = {'status': False, 'message': str(response)}
    except:
        logging.error('ERROR updating Kayako')
        response = {'status': False, 'message': 'unknow error updating kayako'}

    return response
