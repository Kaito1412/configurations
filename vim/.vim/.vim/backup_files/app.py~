#!Python

import config
import lesscpy
from bottle import route, run, response, hook, static_file
from controllers.os import OS
from controllers.cpu import CPU
from controllers.memory import Memory 
from controllers.disk import Disk

@hook('after_request')
def enable_cors():
    response.headers['Access-Control-Allow-Origin'] = '*'
    response.headers['Access-Control-Allow-Methods'] = 'PUT, GET, POST, DELETE, OPTIONS'
    response.headers['Access-Control-Allow-Headers'] = 'Origin, Accept, Content-Type, X-Requested-With, X-CSRF-Token'

@route('/')
def send_static():
    return static_file('index.html', root='static')

@route('/<static:path>')
def send_static(static):
    return static_file(static, root='static')

@route('/api/resume')
def get():
    return {'os_name': OS.name,
            'os_dist': OS.distribution,
            'os_kernel': OS.kernel,
            'cpu_used': CPU.used(),
            'memory_used': Memory.used(),
            'memory_percent': Memory.percent(),
            }

@route('/api/os')
def get():
    return {'os_name': OS.name,
            'os_distribution': OS.distribution,
            'os_architecture': OS.architecture,
            'os_hostname': OS.hostname,
            'os_kernel': OS.kernel,
            'os_user': OS.user,
            'os_shell': OS.shell,
            'os_terminal': OS.terminal,
            'os_uptime': OS.uptime(),
            }

@route('/api/cpu')
def get():
    return {'cpu_vendor': CPU.vendor,
            'cpu_model': CPU.model,
            'cpu_count': CPU.number,
            'cpu_used': CPU.used(),
            'cpu_total': CPU.total,
            'cpu_temperature': CPU.temperature(),
            }

@route('/api/memory')
def get():
    return {'memory_used': Memory.used(),
            'memory_percent': Memory.percent(),
            'memory_total': Memory.total,
            'swap_used': Memory.swap_used(),
            'swap_percent': Memory.swap_percent(),
            'swap_total': Memory.swap_total,
            }

@route('/api/disk')
def get():
    return Disk.all()

def compileLess():
    css = lesscpy.compile('static/less/style.less', minify=True)
    file_css = open('static/css/style.css', 'w')
    file_css.write(css)
    file_css.close()

compileLess()
run(host='0.0.0.0', port=config.PORT)
